--// Ultimate Zombie Aimlock Script //--
--// Features: Version Selection, Main Gui, and SniperZombie Aimbot Version //--

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local camera = workspace.CurrentCamera
local player = Players.LocalPlayer

-- Kiểm tra xem GUI đã tồn tại chưa để tránh tạo nhiều lần
if game:GetService("CoreGui"):FindFirstChild("ZombieAimlockGUI") or player.PlayerGui:FindFirstChild("ZombieAimlockGUI") then
    return -- Nếu đã tồn tại thì không tạo lại
end

-- NEW: Robust GUI initialization
repeat task.wait() until player:IsDescendantOf(game) and player:FindFirstChild("PlayerGui")

local function createSafeGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ZombieAimlockGUI"
    screenGui.ResetOnSpawn = false
    
    -- 1st try: Standard PlayerGui
    local success = pcall(function()
        screenGui.Parent = player:WaitForChild("PlayerGui", 5)
    end)
    
    if not success then
        -- 2nd try: Exploit-specific methods
        pcall(function()
            if get_hidden_gui then
                screenGui.Parent = get_hidden_gui()
            elseif gethui then
                screenGui.Parent = gethui()
            elseif syn and syn.protect_gui then
                syn.protect_gui(screenGui)
                screenGui.Parent = game:GetService("CoreGui")
            else
                screenGui.Parent = game:GetService("CoreGui")
            end
        end)
    end
    return screenGui
end

local screenGui = createSafeGUI()

-- Biến toàn cục để xác định phiên bản đang chạy
local currentVersion = "Main" -- "Main" hoặc "SniperAimbot"

-- Config (ORIGINAL)
local aimPartName = "Head"
local zombiesFolder = workspace:WaitForChild("Zombies")
local isPC = false -- Will be set automatically
local aimbindKey = Enum.KeyCode.Q -- Default keybind
local waitingForKeybind = false

-- Original State (ORIGINAL)
local aimLockActive = false
local uiVisible = true
local espVisible = false
local wallCheckEnabled = true
local hitboxEnabled = false

-- NEW: Smooth Aim Settings
local smoothAimEnabled = false

-- FOV Settings
local fovVisible = false
local aimFOV = 150

-- ESP storage (ORIGINAL)
local espObjects = {}

-- Detect platform (ORIGINAL)
isPC = UserInputService:GetPlatform() == Enum.Platform.Windows

-- Modern color scheme
local colors = {
    background = Color3.fromRGB(25, 25, 35),
    header = Color3.fromRGB(35, 35, 50),
    accent = Color3.fromRGB(0, 170, 255),
    text = Color3.fromRGB(240, 240, 240),
    toggleOn = Color3.fromRGB(0, 200, 100),
    toggleOff = Color3.fromRGB(80, 80, 100),
    button = Color3.fromRGB(45, 45, 60),
    buttonHover = Color3.fromRGB(55, 55, 75),
    fov = Color3.fromRGB(0, 170, 255)
}

----------------------------------------------------------------
-- FOV CIRCLE SYSTEM (ORIGINAL)
----------------------------------------------------------------
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = fovVisible
fovCircle.Color = colors.fov
fovCircle.Thickness = 2
fovCircle.NumSides = 64
fovCircle.Radius = aimFOV
fovCircle.Filled = false

local function updateFOVCircle()
    fovCircle.Radius = aimFOV
    fovCircle.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
    fovCircle.Visible = fovVisible
end

----------------------------------------------------------------
-- MODERN GUI SYSTEM
----------------------------------------------------------------
local mainFrame, toggleUIBtn

local function createModernButton(parent, text, size, position, callback)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = colors.button
    button.TextColor3 = colors.text
    button.Text = text
    button.Font = Enum.Font.GothamSemibold
    button.TextSize = 13
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    local stroke = Instance.new("UIStroke")
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Color = Color3.fromRGB(60, 60, 80)
    stroke.Thickness = 1
    stroke.Parent = button
    
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = colors.buttonHover
    end)
    
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = colors.button
    end)
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

local function createModernToggle(parent, text, yPos, default, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 30)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = colors.text
    label.Font = Enum.Font.Gotham
    label.TextSize = 13
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0, 40, 0, 20)
    toggleFrame.Position = UDim2.new(0.8, 0, 0.5, -10)
    toggleFrame.BackgroundColor3 = default and colors.toggleOn or colors.toggleOff
    toggleFrame.Parent = container
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(1, 0)
    corner.Parent = toggleFrame
    
    local toggleKnob = Instance.new("Frame")
    toggleKnob.Size = UDim2.new(0, 16, 0, 16)
    toggleKnob.Position = UDim2.new(0, default and 20 or 2, 0.5, -8)
    toggleKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    toggleKnob.Parent = toggleFrame
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0)
    knobCorner.Parent = toggleKnob
    
    toggleFrame.MouseButton1Click:Connect(function()
        local newState = not default
        default = newState
        
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(toggleKnob, tweenInfo, {Position = UDim2.new(0, newState and 20 or 2, 0.5, -8)})
        tween:Play()
        
        toggleFrame.BackgroundColor3 = newState and colors.toggleOn or colors.toggleOff
        callback(newState)
    end)
    
    return container
end

local function createSlider(parent, text, yPos, minValue, maxValue, currentValue, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 40)
    container.Position = UDim2.new(0, 0, 0, yPos)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 15)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. currentValue
    label.TextColor3 = colors.text
    label.Font = Enum.Font.Gotham
    label.TextSize = 13
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local sliderTrack = Instance.new("Frame")
    sliderTrack.Size = UDim2.new(1, 0, 0, 5)
    sliderTrack.Position = UDim2.new(0, 0, 0, 20)
    sliderTrack.BackgroundColor3 = colors.button
    sliderTrack.Parent = container
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(1, 0)
    trackCorner.Parent = sliderTrack
    
    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((currentValue - minValue)/(maxValue - minValue), 0, 1, 0)
    sliderFill.BackgroundColor3 = colors.accent
    sliderFill.Parent = sliderTrack
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = sliderFill
    
    local sliderKnob = Instance.new("Frame")
    sliderKnob.Size = UDim2.new(0, 12, 0, 12)
    sliderKnob.Position = UDim2.new((currentValue - minValue)/(maxValue - minValue), -6, 0.5, -6)
    sliderKnob.BackgroundColor3 = Color3.new(1, 1, 1)
    sliderKnob.Parent = sliderTrack
    
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(1, 0)
    knobCorner.Parent = sliderKnob
    
    local dragging = false
    
    local function updateSlider(value)
        local newValue = math.clamp(value, minValue, maxValue)
        sliderFill.Size = UDim2.new((newValue - minValue)/(maxValue - minValue), 0, 1, 0)
        sliderKnob.Position = UDim2.new((newValue - minValue)/(maxValue - minValue), -6, 0.5, -6)
        label.Text = text .. ": " .. newValue
        callback(newValue)
    end
    
    sliderTrack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            local mouseX = UserInputService:GetMouseLocation().X
            local sliderX = sliderTrack.AbsolutePosition.X
            local sliderWidth = sliderTrack.AbsoluteSize.X
            local relativeX = math.clamp(mouseX - sliderX, 0, sliderWidth)
            updateSlider(minValue + (relativeX/sliderWidth) * (maxValue - minValue))
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local mouseX = UserInputService:GetMouseLocation().X
            local sliderX = sliderTrack.AbsolutePosition.X
            local sliderWidth = sliderTrack.AbsoluteSize.X
            local relativeX = math.clamp(mouseX - sliderX, 0, sliderWidth)
            updateSlider(minValue + (relativeX/sliderWidth) * (maxValue - minValue))
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    return container
end

local function initializeModernGUI()
    -- UI Toggle Button
    toggleUIBtn = Instance.new("TextButton")
    toggleUIBtn.Size = UDim2.new(0, 100, 0, 30)
    toggleUIBtn.Position = UDim2.new(0, 10, 0, 10)
    toggleUIBtn.BackgroundColor3 = colors.button
    toggleUIBtn.TextColor3 = colors.text
    toggleUIBtn.Text = "Hide UI [X]"
    toggleUIBtn.Font = Enum.Font.GothamSemibold
    toggleUIBtn.TextSize = 12
    toggleUIBtn.Parent = screenGui

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 6)
    toggleCorner.Parent = toggleUIBtn
    
    local toggleStroke = Instance.new("UIStroke")
    toggleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    toggleStroke.Color = Color3.fromRGB(60, 60, 80)
    toggleStroke.Thickness = 1
    toggleStroke.Parent = toggleUIBtn
    
    toggleUIBtn.MouseEnter:Connect(function()
        toggleUIBtn.BackgroundColor3 = colors.buttonHover
    end)
    
    toggleUIBtn.MouseLeave:Connect(function()
        toggleUIBtn.BackgroundColor3 = colors.button
    end)

    -- Main Frame
    mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 260, 0, 380)
    mainFrame.Position = UDim2.new(0.5, -130, 0.5, -190)
    mainFrame.BackgroundColor3 = colors.background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    mainFrame.Visible = uiVisible
    mainFrame.Active = true
    mainFrame.Draggable = true

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 8)
    mainCorner.Parent = mainFrame
    
    local mainStroke = Instance.new("UIStroke")
    mainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    mainStroke.Color = Color3.fromRGB(60, 60, 80)
    mainStroke.Thickness = 2
    mainStroke.Parent = mainFrame

    -- Header
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 40)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = colors.header
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 8)
    headerCorner.Parent = header
    
    local titleText = Instance.new("TextLabel")
    titleText.Size = UDim2.new(1, -10, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = currentVersion == "Main" and "ZOMBIE AIMLOCK" or "SNIPER AIMBOT"
    titleText.TextColor3 = colors.accent
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = header
    
    local versionText = Instance.new("TextLabel")
    versionText.Size = UDim2.new(0, 60, 0, 15)
    versionText.Position = UDim2.new(1, -70, 0.5, -7)
    versionText.BackgroundTransparency = 1
    versionText.Text = "v2.0"
    versionText.TextColor3 = Color3.fromRGB(180, 180, 200)
    versionText.Font = Enum.Font.Gotham
    versionText.TextSize = 11
    versionText.TextXAlignment = Enum.TextXAlignment.Right
    versionText.Parent = header

    -- Content Frame
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, -10, 1, -50)
    contentFrame.Position = UDim2.new(0, 5, 0, 45)
    contentFrame.BackgroundTransparency = 1
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 4
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 460)
    contentFrame.Parent = mainFrame
    
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 10)
    uiListLayout.Parent = contentFrame

    -- Toggles
    createModernToggle(contentFrame, "AimLock [E]", 0, aimLockActive, function(s) 
        aimLockActive = s 
    end)
    
    createModernToggle(contentFrame, "Smooth Aim", 30, smoothAimEnabled, function(s) 
        smoothAimEnabled = s 
    end)
    
    createModernToggle(contentFrame, "FOV Circle", 60, fovVisible, function(s) 
        fovVisible = s 
        updateFOVCircle()
    end)
    
    createModernToggle(contentFrame, "Zombie ESP", 90, espVisible, function(s) 
        espVisible = s 
        updateESP() 
    end)
    
    createModernToggle(contentFrame, "Wall Check", 120, wallCheckEnabled, function(s) 
        wallCheckEnabled = s 
    end)
    
    createModernToggle(contentFrame, "Expand Hitbox", 150, hitboxEnabled, function(s) 
        hitboxEnabled = s 
        updateAllZombies() 
    end)

    -- FOV Slider
    createSlider(contentFrame, "Aim FOV", 190, 20, 300, aimFOV, function(value)
        aimFOV = value
        updateFOVCircle()
    end)

    -- Aim Part Selection
    local partContainer = Instance.new("Frame")
    partContainer.Size = UDim2.new(1, 0, 0, 40)
    partContainer.Position = UDim2.new(0, 0, 0, 240)
    partContainer.BackgroundTransparency = 1
    partContainer.Parent = contentFrame
    
    local partLabel = Instance.new("TextLabel")
    partLabel.Size = UDim2.new(1, 0, 0, 20)
    partLabel.Position = UDim2.new(0, 0, 0, 0)
    partLabel.BackgroundTransparency = 1
    partLabel.Text = "Aim Part:"
    partLabel.TextColor3 = colors.text
    partLabel.Font = Enum.Font.Gotham
    partLabel.TextSize = 13
    partLabel.TextXAlignment = Enum.TextXAlignment.Left
    partLabel.Parent = partContainer
    
    local headBtn = createModernButton(partContainer, "Head", UDim2.new(0, 100, 0, 25), UDim2.new(0, 0, 0, 20), function()
        aimPartName = "Head"
        headBtn.BackgroundColor3 = colors.accent
        torsoBtn.BackgroundColor3 = colors.button
    end)
    
    local torsoBtn = createModernButton(partContainer, "Torso", UDim2.new(0, 100, 0, 25), UDim2.new(0, 110, 0, 20), function()
        aimPartName = "HumanoidRootPart"
        headBtn.BackgroundColor3 = colors.button
        torsoBtn.BackgroundColor3 = colors.accent
    end)
    
    -- Set initial button states
    headBtn.BackgroundColor3 = aimPartName == "Head" and colors.accent or colors.button
    torsoBtn.BackgroundColor3 = aimPartName == "HumanoidRootPart" and colors.accent or colors.button

    -- Keybind Section (PC only)
    if isPC then
        local keybindContainer = Instance.new("Frame")
        keybindContainer.Size = UDim2.new(1, 0, 0, 40)
        keybindContainer.Position = UDim2.new(0, 0, 0, 290)
        keybindContainer.BackgroundTransparency = 1
        keybindContainer.Parent = contentFrame
        
        local keybindLabel = Instance.new("TextLabel")
        keybindLabel.Size = UDim2.new(0.6, 0, 0, 20)
        keybindLabel.Position = UDim2.new(0, 0, 0, 0)
        keybindLabel.BackgroundTransparency = 1
        keybindLabel.Text = "Aimlock Key: " .. aimbindKey.Name
        keybindLabel.TextColor3 = colors.text
        keybindLabel.Font = Enum.Font.Gotham
        keybindLabel.TextSize = 13
        keybindLabel.TextXAlignment = Enum.TextXAlignment.Left
        keybindLabel.Parent = keybindContainer
        
        local keybindBtn = createModernButton(keybindContainer, "Change", UDim2.new(0, 80, 0, 25), UDim2.new(0.65, 0, 0, 15), function()
            waitingForKeybind = true
            keybindBtn.Text = "Press key..."
        end)
    end

    -- Footer with credit
    local footer = Instance.new("Frame")
    footer.Size = UDim2.new(1, 0, 0, 20)
    footer.Position = UDim2.new(0, 0, 1, -20)
    footer.BackgroundTransparency = 1
    footer.Parent = mainFrame
    
    local creditText = Instance.new("TextLabel")
    creditText.Size = UDim2.new(1, -10, 1, 0)
    creditText.Position = UDim2.new(0, 10, 0, 0)
    creditText.BackgroundTransparency = 1
    creditText.Text = "Made by Jae"
    creditText.TextColor3 = Color3.fromRGB(150, 150, 170)
    creditText.Font = Enum.Font.Gotham
    creditText.TextSize = 11
    creditText.TextXAlignment = Enum.TextXAlignment.Right
    creditText.Parent = footer

    -- UI Toggle Functionality
    toggleUIBtn.MouseButton1Click:Connect(function()
        uiVisible = not uiVisible
        mainFrame.Visible = uiVisible
        toggleUIBtn.Text = uiVisible and "Hide UI [X]" or "Show UI [X]"
    end)

    -- X Key Toggle
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.X then
            uiVisible = not uiVisible
            mainFrame.Visible = uiVisible
            toggleUIBtn.Text = uiVisible and "Hide UI [X]" or "Show UI [X]"
        end
        
        -- E Key Toggle for Aimlock
        if not gameProcessed and input.KeyCode == Enum.KeyCode.E then
            aimLockActive = not aimLockActive
            
            -- Update toggle display
            for _, v in pairs(contentFrame:GetChildren()) do
                if v:IsA("Frame") and v:FindFirstChild("TextLabel") and v.TextLabel.Text:find("AimLock") then
                    local toggleFrame = v:FindFirstChildOfClass("Frame")
                    if toggleFrame then
                        local newState = aimLockActive
                        local toggleKnob = toggleFrame:FindFirstChildOfClass("Frame")
                        
                        if toggleKnob then
                            local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                            local tween = TweenService:Create(toggleKnob, tweenInfo, {Position = UDim2.new(0, newState and 20 or 2, 0.5, -8)})
                            tween:Play()
                            
                            toggleFrame.BackgroundColor3 = newState and colors.toggleOn or colors.toggleOff
                        end
                    end
                end
            end
        end
        
        -- Keybind handling for PC
        if isPC then
            if waitingForKeybind then
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    aimbindKey = input.KeyCode
                    waitingForKeybind = false
                    -- Update keybind display
                    for _, v in pairs(contentFrame:GetChildren()) do
                        if v:IsA("Frame") and v:FindFirstChild("TextLabel") and v.TextLabel.Text:find("Aimlock Key") then
                            v.TextLabel.Text = "Aimlock Key: " .. aimbindKey.Name
                        end
                    end
                    -- Reset button text
                    for _, v in pairs(contentFrame:GetChildren()) do
                        if v:IsA("Frame") and v:FindFirstChildOfClass("TextButton") and v:FindFirstChildOfClass("TextButton").Text == "Press key..." then
                            v:FindFirstChildOfClass("TextButton").Text = "Change"
                        end
                    end
                end
            elseif input.KeyCode == aimbindKey then
                aimLockActive = not aimLockActive
                -- Update toggle display
                for _, v in pairs(contentFrame:GetChildren()) do
                    if v:IsA("Frame") and v:FindFirstChild("TextLabel") and v.TextLabel.Text:find("AimLock") then
                        local toggleFrame = v:FindFirstChildOfClass("Frame")
                        if toggleFrame then
                            local newState = aimLockActive
                            local toggleKnob = toggleFrame:FindFirstChildOfClass("Frame")
                            
                            if toggleKnob then
                                local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                                local tween = TweenService:Create(toggleKnob, tweenInfo, {Position = UDim2.new(0, newState and 20 or 2, 0.5, -8)})
                                tween:Play()
                                
                                toggleFrame.BackgroundColor3 = newState and colors.toggleOn or colors.toggleOff
                            end
                        end
                    end
                end
            end
        end
    end)
end

-- Tạo GUI lựa chọn phiên bản với thiết kế hiện đại
local function createModernVersionSelectionGUI()
    local versionFrame = Instance.new("Frame")
    versionFrame.Size = UDim2.new(0, 260, 0, 60)
    versionFrame.Position = UDim2.new(0.5, -130, 0.5, 160)
    versionFrame.BackgroundColor3 = colors.background
    versionFrame.BorderSizePixel = 0
    versionFrame.Parent = screenGui
    versionFrame.Visible = true
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = versionFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    stroke.Color = Color3.fromRGB(60, 60, 80)
    stroke.Thickness = 2
    stroke.Parent = versionFrame
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 20)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = colors.header
    title.BorderSizePixel = 0
    title.Text = "SELECT VERSION"
    title.TextColor3 = colors.accent
    title.Font = Enum.Font.GothamBold
    title.TextSize = 12
    title.Parent = versionFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = title
    
    local mainBtn = createModernButton(versionFrame, "Main Gui", UDim2.new(0, 110, 0, 25), UDim2.new(0.03, 0, 0, 25), function()
        currentVersion = "Main"
        mainBtn.BackgroundColor3 = colors.accent
        sniperBtn.BackgroundColor3 = colors.button
        
        -- Cập nhật tiêu đề
        if mainFrame and mainFrame:FindFirstChild("Header") then
            local titleText = mainFrame.Header:FindFirstChildOfClass("TextLabel")
            if titleText then
                titleText.Text = "ZOMBIE AIMLOCK"
            end
        end
    end)
    
    local sniperBtn = createModernButton(versionFrame, "Sniper Aimbot", UDim2.new(0, 110, 0, 25), UDim2.new(0.53, 0, 0, 25), function()
        currentVersion = "SniperAimbot"
        sniperBtn.BackgroundColor3 = colors.accent
        mainBtn.BackgroundColor3 = colors.button
        
        -- Cập nhật tiêu đề
        if mainFrame and mainFrame:FindFirstChild("Header") then
            local titleText = mainFrame.Header:FindFirstChildOfClass("TextLabel")
            if titleText then
                titleText.Text = "SNIPER AIMBOT"
            end
        end
    end)
    
    -- Set initial button states
    mainBtn.BackgroundColor3 = currentVersion == "Main" and colors.accent or colors.button
    sniperBtn.BackgroundColor3 = currentVersion == "SniperAimbot" and colors.accent or colors.button
    
    -- Nút Show/Hide cho GUI phiên bản
    local showVersionBtn = createModernButton(screenGui, "Version Panel", UDim2.new(0, 120, 0, 30), UDim2.new(0, 10, 0, 45), function()
        local versionVisible = not versionFrame.Visible
        versionFrame.Visible = versionVisible
        showVersionBtn.Text = versionVisible and "Hide Version" or "Version Panel"
    end)
end

----------------------------------------------------------------
-- ESP FUNCTIONS (MODIFIED - Ẩn tên zombie thường)
----------------------------------------------------------------
local function clearESP()
    for _, v in pairs(espObjects) do
        if v and v.Parent then
            v:Destroy()
        end
    end
    espObjects = {}
end

local function createESP(zombie)
    if zombie:IsA("Model") and not zombie:FindFirstChild("ESP_Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.Adornee = zombie
        highlight.FillColor = Color3.new(1, 0, 0)
        highlight.OutlineColor = Color3.new(1, 0, 0)
        highlight.FillTransparency = 0.7
        highlight.OutlineTransparency = 0
        highlight.Parent = zombie
        
        -- Chỉ tạo nhãn tên nếu không phải là zombie thường
        if zombie.Name ~= "zombie" then
            local nameLabel = Instance.new("BillboardGui")
            nameLabel.Name = "ESP_Name"
            nameLabel.Adornee = zombie:FindFirstChild("Head") or zombie:FindFirstChild("HumanoidRootPart")
            nameLabel.Size = UDim2.new(0, 200, 0, 50)
            nameLabel.StudsOffset = Vector3.new(0, 2, 0)
            nameLabel.AlwaysOnTop = true
            nameLabel.Parent = zombie
            
            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = zombie.Name
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
            textLabel.TextStrokeTransparency = 0
            textLabel.TextSize = 14
            textLabel.Font = Enum.Font.GothamBold
            textLabel.Parent = nameLabel
            
            table.insert(espObjects, nameLabel)
        end
        
        table.insert(espObjects, highlight)
    end
end

local function updateESP()
    clearESP()
    if espVisible then
        for _, z in ipairs(zombiesFolder:GetChildren()) do
            createESP(z)
        end
    end
end

zombiesFolder.ChildAdded:Connect(function(child)
    if espVisible then
        task.wait(0.1)
        createESP(child)
    end
end)

----------------------------------------------------------------
-- SPECIAL SNIPER ZOMBIE HANDLING (NEW)
----------------------------------------------------------------
local function isSniperZombie(zombie)
    -- Check if this is a sniper zombie by name or other characteristics
    return zombie.Name:lower():find("sniper") or zombie.Name:lower():find("shooter")
end

local function getSniperZombieRealPosition(zombie)
    -- Try to find the actual position of the sniper zombie
    -- This is a workaround for the visual bug where it appears stuck at spawn
    
    -- Method 1: Check if there's a humanoid root part that might have the real position
    local rootPart = zombie:FindFirstChild("HumanoidRootPart")
    if rootPart and (rootPart.Position - zombie:GetPivot().Position).Magnitude > 5 then
        return rootPart.Position
    end
    
    -- Method 2: Check for any moving parts
    for _, part in ipairs(zombie:GetChildren()) do
        if part:IsA("BasePart") and part.Velocity.Magnitude > 0 then
            return part.Position
        end
    end
    
    -- Method 3: If all else fails, try to find the zombie by raycasting
    local character = player.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            -- Raycast to find zombies in the direction the player is facing
            local rayOrigin = humanoidRootPart.Position
            local rayDirection = (humanoidRootPart.CFrame.LookVector * 100)
            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = {character}
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            raycastParams.IgnoreWater = true
            
            local result = workspace:Raycast(rayOrigin, rayDirection, raycastParams)
            if result and result.Instance then
                local hitZombie = result.Instance:FindFirstAncestorOfClass("Model")
                if hitZombie == zombie then
                    return result.Position
                end
            end
        end
    end
    
    -- Fallback: Return the visual position
    return zombie:GetPivot().Position
end

----------------------------------------------------------------
-- SMOOTH AIM FUNCTION (NEW)
----------------------------------------------------------------
local function smoothAim(targetPosition)
    local currentCFrame = camera.CFrame
    local targetCFrame = CFrame.new(currentCFrame.Position, targetPosition)
    
    -- Calculate the smooth transition with a fixed smoothness factor
    local smoothFactor = 0.15 -- Fixed smoothness value
    local newCFrame = currentCFrame:Lerp(targetCFrame, smoothFactor)
    
    return newCFrame
end

----------------------------------------------------------------
-- AIMBOT FUNCTIONS (MODIFIED - Special handling for sniper zombies)
----------------------------------------------------------------
local function getClosestZombieInFOV()
    local closestZombie = nil
    local closestDistance = math.huge
    local screenCenter = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
    
    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        -- Bỏ qua zombie có tên "SwampGiant"
        if zombie:IsA("Model") and zombie.Name ~= "SwampGiant" then
            local part = zombie:FindFirstChild(aimPartName)
            if part then
                -- Special handling for sniper zombies with visual bugs
                local targetPosition = part.Position
                if isSniperZombie(zombie) then
                    targetPosition = getSniperZombieRealPosition(zombie)
                end
                
                local screenPos, onScreen = camera:WorldToViewportPoint(targetPosition)
                
                if onScreen then
                    local screenDistance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                    local worldDistance = (targetPosition - camera.CFrame.Position).Magnitude
                    
                    if screenDistance <= aimFOV and worldDistance < closestDistance then
                        -- MODIFIED: In SniperAimbot version, only target SniperZombies
                        if currentVersion == "SniperAimbot" and not isSniperZombie(zombie) then
                            -- Skip non-sniper zombies in SniperAimbot mode
                        else
                            local visible = true
                            if wallCheckEnabled then
                                local raycastParams = RaycastParams.new()
                                raycastParams.FilterDescendantsInstances = {player.Character, camera}
                                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                                raycastParams.IgnoreWater = true
                                
                                local rayDirection = (targetPosition - camera.CFrame.Position)
                                local result = workspace:Raycast(
                                    camera.CFrame.Position,
                                    rayDirection.Unit * rayDirection.Magnitude,
                                    raycastParams
                                )
                                
                                if result then
                                    local hitPart = result.Instance
                                    visible = hitPart and (hitPart:IsDescendantOf(zombie) or hitPart == part)
                                end
                            end
                            
                            if visible then
                                closestDistance = worldDistance
                                closestZombie = zombie
                            end
                        end
                    end
                end
            end
        end
    end
    
    return closestZombie
end

----------------------------------------------------------------
-- HITBOX FUNCTIONS (MODIFIED - Special handling for sniper zombies)
----------------------------------------------------------------
local function expandHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if not head:FindFirstChild("OriginalSize") then
                local originalSize = Instance.new("Vector3Value")
                originalSize.Name = "OriginalSize"
                originalSize.Value = head.Size
                originalSize.Parent = head
            end
            
            -- Special hitbox for sniper zombies (4x4x4 as requested)
            if isSniperZombie(zombie) then
                head.Size = Vector3.new(4, 4, 4)  -- 4x4x4 for sniper zombies
            else
                head.Size = Vector3.new(5, 5, 5)  -- Regular size for other zombies
            end
            
            head.CanCollide = false
            head.Material = Enum.Material.ForceField
        end
    end
end

local function resetHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if head:FindFirstChild("OriginalSize") then
                head.Size = head.OriginalSize.Value
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
                head.OriginalSize:Destroy()
            else
                head.Size = Vector3.new(1, 1, 1)
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
            end
        end
    end
end

local function updateAllZombies()
    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        if hitboxEnabled then
            expandHeadHitbox(zombie)
        else
            resetHeadHitbox(zombie)
        end
    end
end

zombiesFolder.ChildAdded:Connect(function(zombie)
    task.wait(0.2)
    if hitboxEnabled then
        expandHeadHitbox(zombie)
    end
end)

-- Initialize hitboxes
updateAllZombies()

----------------------------------------------------------------
-- MAIN LOOP (MODIFIED - Special targeting for sniper zombies)
----------------------------------------------------------------
RunService.RenderStepped:Connect(function()
    -- Update FOV circle position and size
    updateFOVCircle()
    
    -- Aimlock logic
    if aimLockActive then
        local targetZombie = getClosestZombieInFOV()
        if targetZombie then
            local targetPart = targetZombie[aimPartName]
            if targetPart then
                -- Special handling for sniper zombies
                local targetPosition = targetPart.Position
                if isSniperZombie(targetZombie) then
                    targetPosition = getSniperZombieRealPosition(targetZombie)
                end
                
                -- Apply smooth aim if enabled
                if smoothAimEnabled then
                    camera.CFrame = smoothAim(targetPosition)
                else
                    camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                end
            end
        end
    end
end)

-- Khởi tạo GUI chính và GUI lựa chọn phiên bản
initializeModernGUI()
createModernVersionSelectionGUI()
