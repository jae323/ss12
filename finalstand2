--// SMART SPECIAL KILLING AIM LOCK SCRIPT WITH FOV + CLASSIC GUI SYSTEM + WALL CHECK + HITBOX + VERSION SELECTION + DESTROYERS ONLY + PRINTING MODE //--

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local camera = workspace.CurrentCamera
local player = Players.LocalPlayer

-- Config
local aimPartName = "Head"
local zombiesFolder = workspace:WaitForChild("Zombies")

-- State
local aimLockActive = false
local aimFOV = 100
local draggingSlider = false
local uiVisible = true
local fovVisible = true
local espVisible = false
local wallCheckEnabled = true
local hitboxEnabled = false

-- Version system
local currentVersion = "Main" -- "Main", "OnlySniper", "IgnoreWraith", "SmartSpecialKilling", "DestroyersOnly", "PrintingMode"
local versionButtonColors = {}
local versionFrameVisible = false

-- Smart Special Killing variables
local GUARDIAN_PRIORITY_RANGE = 20 -- Distance to prioritize GuardianZombie when near Hunter (updated from 50 to 20)
local BOSS_IGNORE_HP_THRESHOLD = 0.5 -- 50% HP
local BOSS_IGNORE_DURATION = 8 -- Seconds to ignore Boss
local bossIgnoreTimers = {} -- Table to track boss ignore timers

-- Smooth aiming variables
local smoothAimEnabled = true
local smoothnessAmount = 1.5 -- Default smoothness
local lastCameraCFrame = camera.CFrame
local aimSmoothTween = nil

-- ESP storage
local espObjects = {}

-- Platform detection
local isPC = UserInputService:GetPlatform() == Enum.Platform.Windows
local aimbindKey = Enum.KeyCode.Q -- Default keybind for PC
local waitingForKeybind = false

-- Classic color scheme
local colors = {
    background = Color3.fromRGB(45, 45, 55),
    header = Color3.fromRGB(60, 60, 70),
    accent = Color3.fromRGB(0, 120, 215),
    text = Color3.fromRGB(240, 240, 240),
    button = Color3.fromRGB(65, 65, 75),
    buttonHover = Color3.fromRGB(75, 75, 85),
    toggleOff = Color3.fromRGB(100, 100, 110),
    toggleOn = Color3.fromRGB(0, 180, 80),
    sliderTrack = Color3.fromRGB(80, 80, 90),
    sliderFill = Color3.fromRGB(0, 140, 235),
    border = Color3.fromRGB(30, 30, 40)
}

-- Dynamic ESP colors for different zombie types
local espColors = {
    normal = Color3.fromRGB(255, 255, 255),      -- White for normal zombies
    sniper = Color3.fromRGB(50, 255, 50),        -- Green for sniper zombies
    wraith = Color3.fromRGB(255, 50, 255),       -- Pink for wraith zombies
    boss = Color3.fromRGB(255, 0, 0),            -- Red for boss zombies
    guardian = Color3.fromRGB(0, 191, 255),      -- Blue for guardian zombies
    hunter = Color3.fromRGB(255, 165, 0),        -- Orange for hunter zombies
    berserk = Color3.fromRGB(255, 0, 0),         -- Red for berserk zombies
    drench = Color3.fromRGB(0, 100, 255),        -- Blue for drench zombies
    destroyer = Color3.fromRGB(255, 215, 0)      -- Gold for destroyer zombies
}

----------------------------------------------------------------
-- CLASSIC GUI SYSTEM WITH SCROLL
----------------------------------------------------------------
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ClassicAimLockGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Container Frame
local mainContainer = Instance.new("Frame")
mainContainer.Size = UDim2.new(0, 300, 0, 400)
mainContainer.Position = UDim2.new(0.5, -150, 0.5, -200)
mainContainer.BackgroundTransparency = 1
mainContainer.Parent = screenGui

-- Classic frame with border
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(1, 0, 1, 0)
mainFrame.Position = UDim2.new(0, 0, 0, 0)
mainFrame.BackgroundColor3 = colors.background
mainFrame.BorderSizePixel = 1
mainFrame.BorderColor3 = colors.border
mainFrame.Parent = mainContainer

-- Header
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 30)
header.Position = UDim2.new(0, 0, 0, 0)
header.BackgroundColor3 = colors.header
header.BorderSizePixel = 1
header.BorderColor3 = colors.border
header.Parent = mainFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "ZOMBIE AIMBOT"
title.TextColor3 = colors.text
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = header

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 25, 0, 25)
closeBtn.Position = UDim2.new(1, -30, 0, 2)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.TextColor3 = colors.text
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 16
closeBtn.Parent = header

closeBtn.MouseButton1Click:Connect(function()
    uiVisible = false
    mainContainer.Visible = false
end)

-- Scrolling Frame for Main GUI
local mainScrollingFrame = Instance.new("ScrollingFrame")
mainScrollingFrame.Size = UDim2.new(1, -10, 1, -40)
mainScrollingFrame.Position = UDim2.new(0, 5, 0, 35)
mainScrollingFrame.BackgroundTransparency = 1
mainScrollingFrame.ScrollBarThickness = 8
mainScrollingFrame.ScrollBarImageColor3 = colors.accent
mainScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 650)
mainScrollingFrame.Parent = mainFrame

local contentLayout = Instance.new("UIListLayout")
contentLayout.Padding = UDim.new(0, 8)
contentLayout.Parent = mainScrollingFrame

-- Classic button creation function
local function createClassicButton(parent, text, size, callback)
    local button = Instance.new("TextButton")
    button.Size = size
    button.BackgroundColor3 = colors.button
    button.BorderSizePixel = 1
    button.BorderColor3 = colors.border
    button.Text = text
    button.TextColor3 = colors.text
    button.Font = Enum.Font.SourceSans
    button.TextSize = 14
    button.AutoButtonColor = false
    button.Parent = parent
    
    -- Hover effect
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = colors.buttonHover
    end)
    
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = colors.button
    end)
    
    button.MouseButton1Click:Connect(callback)
    
    return button
end

-- Classic toggle button creation function
local function createClassicToggle(parent, text, defaultState, callback)
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, 30)
    container.BackgroundTransparency = 1
    container.Parent = parent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = colors.text
    label.Font = Enum.Font.SourceSans
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0.25, 0, 0.7, 0)
    toggle.Position = UDim2.new(0.75, 0, 0.15, 0)
    toggle.BackgroundColor3 = defaultState and colors.toggleOn or colors.toggleOff
    toggle.BorderSizePixel = 1
    toggle.BorderColor3 = colors.border
    toggle.Text = defaultState and "ON" or "OFF"
    toggle.TextColor3 = colors.text
    toggle.Font = Enum.Font.SourceSansBold
    toggle.TextSize = 12
    toggle.AutoButtonColor = false
    toggle.Parent = container
    
    toggle.MouseButton1Click:Connect(function()
        local newState = not defaultState
        defaultState = newState
        toggle.BackgroundColor3 = newState and colors.toggleOn or colors.toggleOff
        toggle.Text = newState and "ON" or "OFF"
        callback(newState)
    end)
    
    return toggle
end

-- Create UI elements with classic design
local aimlockToggle = createClassicToggle(mainScrollingFrame, "AimLock", aimLockActive, function(state)
    aimLockActive = state
end)

local fovToggle = createClassicToggle(mainScrollingFrame, "FOV Circle", fovVisible, function(state)
    fovVisible = state
    fovCircle.Visible = state
end)

local espToggle = createClassicToggle(mainScrollingFrame, "Zombie ESP", espVisible, function(state)
    espVisible = state
    updateESP()
end)

local wallCheckToggle = createClassicToggle(mainScrollingFrame, "Wall Check", wallCheckEnabled, function(state)
    wallCheckEnabled = state
end)

local hitboxToggle = createClassicToggle(mainScrollingFrame, "Expand Hitbox", hitboxEnabled, function(state)
    hitboxEnabled = state
    updateAllZombies()
end)

local smoothAimToggle = createClassicToggle(mainScrollingFrame, "Smooth Aim", smoothAimEnabled, function(state)
    smoothAimEnabled = state
end)

-- FOV Slider
local sliderContainer = Instance.new("Frame")
sliderContainer.Size = UDim2.new(1, 0, 0, 45)
sliderContainer.BackgroundTransparency = 1
sliderContainer.Parent = mainScrollingFrame

local sliderLabel = Instance.new("TextLabel")
sliderLabel.Size = UDim2.new(1, 0, 0, 20)
sliderLabel.Position = UDim2.new(0, 0, 0, 0)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Text = "Aim FOV: " .. aimFOV
sliderLabel.TextColor3 = colors.text
sliderLabel.Font = Enum.Font.SourceSans
sliderLabel.TextSize = 14
sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
sliderLabel.Parent = sliderContainer

local sliderTrack = Instance.new("Frame")
sliderTrack.Size = UDim2.new(1, 0, 0, 8)
sliderTrack.Position = UDim2.new(0, 0, 0, 30)
sliderTrack.BackgroundColor3 = colors.sliderTrack
sliderTrack.BorderSizePixel = 1
sliderTrack.BorderColor3 = colors.border
sliderTrack.Parent = sliderContainer

local sliderFill = Instance.new("Frame")
sliderFill.Size = UDim2.new((aimFOV - 20)/280, 0, 1, 0)
sliderFill.BackgroundColor3 = colors.sliderFill
sliderFill.BorderSizePixel = 0
sliderFill.Parent = sliderTrack

local sliderKnob = Instance.new("Frame")
sliderKnob.Size = UDim2.new(0, 16, 0, 16)
sliderKnob.Position = UDim2.new((aimFOV - 20)/280, -8, 0.5, -8)
sliderKnob.BackgroundColor3 = colors.text
sliderKnob.BorderSizePixel = 1
sliderKnob.BorderColor3 = colors.border
sliderKnob.Parent = sliderTrack

local function updateFOVSlider()
    sliderFill.Size = UDim2.new((aimFOV - 20)/280, 0, 1, 0)
    sliderKnob.Position = UDim2.new((aimFOV - 20)/280, -8, 0.5, -8)
    sliderLabel.Text = "Aim FOV: " .. aimFOV
    fovCircle.Radius = aimFOV
end

sliderTrack.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        draggingSlider = true
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouseX = UserInputService:GetMouseLocation().X
        local sliderX = sliderTrack.AbsolutePosition.X
        local sliderWidth = sliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(mouseX - sliderX, 0, sliderWidth)
        
        aimFOV = math.floor(20 + (relativeX/sliderWidth) * 280)
        updateFOVSlider()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        draggingSlider = false
    end
end)

-- Smoothness Selection
local smoothnessContainer = Instance.new("Frame")
smoothnessContainer.Size = UDim2.new(1, 0, 0, 40)
smoothnessContainer.BackgroundTransparency = 1
smoothnessContainer.Parent = mainScrollingFrame

local smoothnessLabel = Instance.new("TextLabel")
smoothnessLabel.Size = UDim2.new(1, 0, 0, 20)
smoothnessLabel.Position = UDim2.new(0, 0, 0, 0)
smoothnessLabel.BackgroundTransparency = 1
smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
smoothnessLabel.TextColor3 = colors.text
smoothnessLabel.Font = Enum.Font.SourceSans
smoothnessLabel.TextSize = 14
smoothnessLabel.TextXAlignment = Enum.TextXAlignment.Left
smoothnessLabel.Parent = smoothnessContainer

local smoothness15Btn = createClassicButton(
    smoothnessContainer,
    "1.5",
    UDim2.new(0.3, 0, 0, 25),
    function()
        smoothnessAmount = 1.5
        smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
        smoothness15Btn.BackgroundColor3 = colors.accent
        smoothness3Btn.BackgroundColor3 = colors.button
        smoothness6Btn.BackgroundColor3 = colors.button
    end
)
smoothness15Btn.Position = UDim2.new(0, 0, 0, 20)
smoothness15Btn.BackgroundColor3 = smoothnessAmount == 1.5 and colors.accent or colors.button

local smoothness3Btn = createClassicButton(
    smoothnessContainer,
    "3.0",
    UDim2.new(0.3, 0, 0, 25),
    function()
        smoothnessAmount = 3.0
        smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
        smoothness15Btn.BackgroundColor3 = colors.button
        smoothness3Btn.BackgroundColor3 = colors.accent
        smoothness6Btn.BackgroundColor3 = colors.button
    end
)
smoothness3Btn.Position = UDim2.new(0.35, 0, 0, 20)
smoothness3Btn.BackgroundColor3 = smoothnessAmount == 3.0 and colors.accent or colors.button

local smoothness6Btn = createClassicButton(
    smoothnessContainer,
    "6.0",
    UDim2.new(0.3, 0, 0, 25),
    function()
        smoothnessAmount = 6.0
        smoothnessLabel.Text = "Smoothness: " .. smoothnessAmount
        smoothness15Btn.BackgroundColor3 = colors.button
        smoothness3Btn.BackgroundColor3 = colors.button
        smoothness6Btn.BackgroundColor3 = colors.accent
    end
)
smoothness6Btn.Position = UDim2.new(0.7, 0, 0, 20)
smoothness6Btn.BackgroundColor3 = smoothnessAmount == 6.0 and colors.accent or colors.button

-- Hitbox Selection
local hitboxContainer = Instance.new("Frame")
hitboxContainer.Size = UDim2.new(1, 0, 0, 40)
hitboxContainer.BackgroundTransparency = 1
hitboxContainer.Parent = mainScrollingFrame

local hitboxLabel = Instance.new("TextLabel")
hitboxLabel.Size = UDim2.new(1, 0, 0, 20)
hitboxLabel.Position = UDim2.new(0, 0, 0, 0)
hitboxLabel.BackgroundTransparency = 1
hitboxLabel.Text = "Aim Part:"
hitboxLabel.TextColor3 = colors.text
hitboxLabel.Font = Enum.Font.SourceSans
hitboxLabel.TextSize = 14
hitboxLabel.TextXAlignment = Enum.TextXAlignment.Left
hitboxLabel.Parent = hitboxContainer

local headBtn = createClassicButton(
    hitboxContainer,
    "Head",
    UDim2.new(0.48, 0, 0, 25),
    function()
        if currentVersion ~= "PrintingMode" then
            aimPartName = "Head"
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
        end
    end
)
headBtn.Position = UDim2.new(0, 0, 0, 20)
headBtn.BackgroundColor3 = aimPartName == "Head" and colors.accent or colors.button

local torsoBtn = createClassicButton(
    hitboxContainer,
    "Torso",
    UDim2.new(0.48, 0, 0, 25),
    function()
        if currentVersion ~= "PrintingMode" then
            aimPartName = "HumanoidRootPart"
            headBtn.BackgroundColor3 = colors.button
            torsoBtn.BackgroundColor3 = colors.accent
        end
    end
)
torsoBtn.Position = UDim2.new(0.52, 0, 0, 20)
torsoBtn.BackgroundColor3 = aimPartName == "HumanoidRootPart" and colors.accent or colors.button

-- UI Toggle Button (outside main frame)
local toggleUIBtn = createClassicButton(
    screenGui,
    "Hide UI",
    UDim2.new(0, 100, 0, 30),
    function()
        uiVisible = not uiVisible
        mainContainer.Visible = uiVisible
        toggleUIBtn.Text = uiVisible and "Hide UI" or "Show UI"
    end
)
toggleUIBtn.Position = UDim2.new(0, 10, 0, 10)

-- Create the version selection GUI first
local versionFrame

local function createVersionSelectionGUI()
    versionFrame = Instance.new("Frame")
    versionFrame.Size = UDim2.new(0, 300, 0, 350) -- Increased height for new version
    versionFrame.Position = UDim2.new(0.5, -150, 0.5, -175)
    versionFrame.BackgroundColor3 = colors.background
    versionFrame.BorderSizePixel = 1
    versionFrame.BorderColor3 = colors.border
    versionFrame.Parent = screenGui
    versionFrame.Visible = false
    versionFrame.Active = true
    versionFrame.Draggable = true
    versionFrame.ZIndex = 10 -- Ensure it appears above other elements
    
    -- Header
    local versionHeader = Instance.new("Frame")
    versionHeader.Size = UDim2.new(1, 0, 0, 30)
    versionHeader.Position = UDim2.new(0, 0, 0, 0)
    versionHeader.BackgroundColor3 = colors.header
    versionHeader.BorderSizePixel = 1
    versionHeader.BorderColor3 = colors.border
    versionHeader.Parent = versionFrame
    versionHeader.ZIndex = 11
    
    local versionTitle = Instance.new("TextLabel")
    versionTitle.Size = UDim2.new(1, -40, 1, 0)
    versionTitle.Position = UDim2.new(0, 10, 0, 0)
    versionTitle.BackgroundTransparency = 1
    versionTitle.Text = "SELECT VERSION"
    versionTitle.TextColor3 = colors.text
    versionTitle.Font = Enum.Font.SourceSansBold
    versionTitle.TextSize = 16
    versionTitle.TextXAlignment = Enum.TextXAlignment.Left
    versionTitle.ZIndex = 12
    versionTitle.Parent = versionHeader
    
    -- Close button
    local versionCloseBtn = Instance.new("TextButton")
    versionCloseBtn.Size = UDim2.new(0, 25, 0, 25)
    versionCloseBtn.Position = UDim2.new(1, -30, 0, 2)
    versionCloseBtn.BackgroundTransparency = 1
    versionCloseBtn.Text = "X"
    versionCloseBtn.TextColor3 = colors.text
    versionCloseBtn.Font = Enum.Font.SourceSansBold
    versionCloseBtn.TextSize = 16
    versionCloseBtn.ZIndex = 12
    versionCloseBtn.Parent = versionHeader
    
    versionCloseBtn.MouseButton1Click:Connect(function()
        versionFrame.Visible = false
    end)
    
    -- Scrolling Frame for Version GUI
    local versionScrollingFrame = Instance.new("ScrollingFrame")
    versionScrollingFrame.Size = UDim2.new(1, -10, 1, -40)
    versionScrollingFrame.Position = UDim2.new(0, 5, 0, 35)
    versionScrollingFrame.BackgroundTransparency = 1
    versionScrollingFrame.ScrollBarThickness = 8
    versionScrollingFrame.ScrollBarImageColor3 = colors.accent
    versionScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 320) -- Increased for new version
    versionScrollingFrame.ZIndex = 11
    versionScrollingFrame.Parent = versionFrame
    
    local versionLayout = Instance.new("UIListLayout")
    versionLayout.Padding = UDim.new(0, 8)
    versionLayout.Parent = versionScrollingFrame
    
    -- Version buttons
    local mainBtn = createClassicButton(
        versionScrollingFrame,
        "Main Version - Aim all zombies",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "Main"
            aimPartName = "Head" -- Reset to head for non-Printing modes
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    mainBtn.BackgroundColor3 = currentVersion == "Main" and Color3.fromRGB(0, 120, 215) or colors.button
    mainBtn.ZIndex = 12
    
    local sniperBtn = createClassicButton(
        versionScrollingFrame,
        "Sniper Only - Aim only sniper zombies",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "OnlySniper"
            aimPartName = "Head" -- Reset to head for non-Printing modes
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    sniperBtn.BackgroundColor3 = currentVersion == "OnlySniper" and Color3.fromRGB(0, 180, 80) or colors.button
    sniperBtn.ZIndex = 12
    
    local ignoreWraithBtn = createClassicButton(
        versionScrollingFrame,
        "Ignore Wraith - Skip wraith & drench zombies",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "IgnoreWraith"
            aimPartName = "Head" -- Reset to head for non-Printing modes
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    ignoreWraithBtn.BackgroundColor3 = currentVersion == "IgnoreWraith" and Color3.fromRGB(255, 165, 0) or colors.button
    ignoreWraithBtn.ZIndex = 12
    
    local smartSpecialBtn = createClassicButton(
        versionScrollingFrame,
        "Smart Kill - Priority system",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "SmartSpecialKilling"
            aimPartName = "Head" -- Reset to head for non-Printing modes
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    smartSpecialBtn.BackgroundColor3 = currentVersion == "SmartSpecialKilling" and Color3.fromRGB(180, 0, 255) or colors.button
    smartSpecialBtn.ZIndex = 12
    
    local destroyersOnlyBtn = createClassicButton(
        versionScrollingFrame,
        "Destroyers Only - turret only destroyer",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "DestroyersOnly"
            aimPartName = "Head" -- Reset to head for non-Printing modes
            headBtn.BackgroundColor3 = colors.accent
            torsoBtn.BackgroundColor3 = colors.button
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    destroyersOnlyBtn.BackgroundColor3 = currentVersion == "DestroyersOnly" and Color3.fromRGB(255, 215, 0) or colors.button
    destroyersOnlyBtn.ZIndex = 12
    
    -- NEW: Printing Mode Version
    local printingModeBtn = createClassicButton(
        versionScrollingFrame,
        "Printing Mode - reduce damage to print",
        UDim2.new(1, 0, 0, 40),
        function()
            currentVersion = "PrintingMode"
            aimPartName = "HumanoidRootPart" -- Force torso for Printing Mode
            headBtn.BackgroundColor3 = colors.button
            torsoBtn.BackgroundColor3 = colors.accent
            versionFrame.Visible = false
            updateAllZombies()
        end
    )
    printingModeBtn.BackgroundColor3 = currentVersion == "PrintingMode" and Color3.fromRGB(100, 100, 255) or colors.button
    printingModeBtn.ZIndex = 12
    
    -- Update canvas size when content changes
    versionLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        versionScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, versionLayout.AbsoluteContentSize.Y + 10)
    end)
end

createVersionSelectionGUI()

-- Version Selection Button (outside main frame)
local versionSelectBtn = createClassicButton(
    screenGui,
    "Select Version",
    UDim2.new(0, 120, 0, 30),
    function()
        if versionFrame then
            versionFrame.Visible = not versionFrame.Visible
        end
    end
)
versionSelectBtn.Position = UDim2.new(0, 10, 0, 50)

-- FOV Circle Drawing
local fovCircle = Drawing.new("Circle")
fovCircle.Color = Color3.fromRGB(0, 170, 255)
fovCircle.Thickness = 2
fovCircle.NumSides = 64
fovCircle.Radius = aimFOV
fovCircle.Filled = false
fovCircle.Visible = fovVisible

-- Update canvas size when content changes
contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    mainScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 10)
end)

----------------------------------------------------------------
-- SPECIAL ZOMBIE IDENTIFICATION FUNCTIONS
----------------------------------------------------------------
local function isSniperZombie(zombie)
    return zombie.Name:lower():find("sniper") or zombie.Name:lower():find("shooter")
end

local function isWraithZombie(zombie)
    return zombie.Name:lower():find("wraith")
end

local function isHunterZombie(zombie)
    return zombie.Name:lower():find("hunter")
end

local function isBerserkZombie(zombie)
    return zombie.Name:lower():find("berserk")
end

local function isDrenchZombie(zombie)
    return zombie.Name:lower():find("drench")
end

local function isDestroyerZombie(zombie)
    return zombie.Name:lower():find("destroyer")
end

----------------------------------------------------------------
-- SMART SPECIAL KILLING FUNCTIONS (NEW)
----------------------------------------------------------------
local function isGuardianZombie(zombie)
    return zombie.Name == "GuardianZombie" or (zombie:FindFirstChild("IsGuardian") and zombie.IsGuardian.Value == true)
end

local function isBossZombie(zombie)
    return zombie.Name == "Boss" or (zombie:FindFirstChild("IsBoss") and zombie.IsBoss.Value == true)
end

local function shouldIgnoreBoss(boss)
    -- Check if boss is in ignore timers
    if bossIgnoreTimers[boss] and os.clock() - bossIgnoreTimers[boss] < BOSS_IGNORE_DURATION then
        return true
    end

    -- Check if boss HP is below threshold
    local humanoid = boss:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health / humanoid.MaxHealth <= BOSS_IGNORE_HP_THRESHOLD then
        -- Add to ignore timers
        bossIgnoreTimers[boss] = os.clock()
        return true
    end

    return false
end

local function cleanupBossTimers()
    local currentTime = os.clock()
    for boss, timer in pairs(bossIgnoreTimers) do
        if not boss:IsDescendantOf(workspace) or currentTime - timer >= BOSS_IGNORE_DURATION then
            bossIgnoreTimers[boss] = nil
        end
    end
end

----------------------------------------------------------------
-- ESP Functions (ENHANCED WITH DYNAMIC COLORS)
----------------------------------------------------------------
local function clearESP()
    for _, v in pairs(espObjects) do
        if v and v.Parent then
            v:Destroy()
        end
    end
    table.clear(espObjects)
end

local function getZombieColor(zombie)
    if isDestroyerZombie(zombie) then
        return espColors.destroyer
    elseif isBossZombie(zombie) then
        return espColors.boss
    elseif isHunterZombie(zombie) then
        return espColors.hunter
    elseif isSniperZombie(zombie) then
        return espColors.sniper
    elseif isWraithZombie(zombie) then
        return espColors.wraith
    elseif isGuardianZombie(zombie) then
        return espColors.guardian
    elseif isBerserkZombie(zombie) then
        return espColors.berserk
    elseif isDrenchZombie(zombie) then
        return espColors.drench
    else
        return espColors.normal
    end
end

local function shouldShowESP(zombie)
    local name = zombie.Name:lower()
    return name:find("sniper") or name:find("hunter") or name:find("berserk") or name:find("boss") or 
           name:find("wraith") or name:find("guardian") or name:find("drench") or name:find("destroyer")
end

local function createESP(obj)
    if obj:IsA("Model") and not obj:FindFirstChild("ESP_Highlight") then
        local zombieColor = getZombieColor(obj)
        
        -- Highlight for all zombies (normal and special)
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.Adornee = obj
        highlight.FillColor = zombieColor
        highlight.OutlineColor = zombieColor
        highlight.FillTransparency = 0.8  -- More transparent to not block vision
        highlight.OutlineTransparency = 0
        highlight.Parent = obj
        table.insert(espObjects, highlight)

        -- Only show name text for special zombies (with transparent background)
        if shouldShowESP(obj) then
            -- Smaller, less intrusive billboard with transparent background
            local billboard = Instance.new("BillboardGui")
            billboard.Name = "ESP_Billboard"
            billboard.Adornee = obj:FindFirstChild("Head") or obj:FindFirstChild("HumanoidRootPart") or obj
            billboard.Size = UDim2.new(0, 100, 0, 20) -- Reduced size
            billboard.StudsOffset = Vector3.new(0, 2.5, 0) -- Slightly higher position
            billboard.AlwaysOnTop = true
            billboard.Parent = obj

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1 -- Completely transparent background
            label.TextColor3 = zombieColor
            label.Text = obj.Name
            label.TextSize = 12 -- Smaller text size
            label.Font = Enum.Font.SourceSansBold
            label.Parent = billboard

            table.insert(espObjects, billboard)
        end
    end
end

local function updateESP()
    clearESP()
    if espVisible then
        for _, z in ipairs(zombiesFolder:GetChildren()) do
            createESP(z)
        end
    end
end

-- ESP Toggle Handler
espToggle.MouseButton1Click:Connect(function()
    espVisible = not espVisible
    espToggle.Text = espVisible and "ON" or "OFF"
    espToggle.BackgroundColor3 = espVisible and colors.toggleOn or colors.toggleOff
    updateESP()
end)

zombiesFolder.ChildAdded:Connect(function(child)
    if espVisible then
        task.wait(0.1)
        createESP(child)
    end
end)

zombiesFolder.ChildRemoved:Connect(function(child)
    if espVisible then
        updateESP()
    end
end)

----------------------------------------------------------------
-- IMPROVED SMOOTH AIMING FUNCTIONS (UPDATED)
----------------------------------------------------------------
local function smoothAim(targetPosition)
    if not smoothAimEnabled then
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
        lastCameraCFrame = camera.CFrame
        return
    end

    -- Cancel any existing tween
    if aimSmoothTween then
        aimSmoothTween:Cancel()
        aimSmoothTween = nil
    end

    local currentPosition = camera.CFrame.Position
    local targetLookVector = (targetPosition - currentPosition).Unit
    
    -- Calculate the desired look CFrame
    local targetCFrame = CFrame.new(currentPosition, currentPosition + targetLookVector)
    
    -- Apply smoothness with a tween for more natural movement
    local tweenInfo = TweenInfo.new(
        0.1 / smoothnessAmount, -- Duration based on smoothness
        Enum.EasingStyle.Quad, -- Natural easing
        Enum.EasingDirection.Out -- Ease out for smooth stop
    )
    
    aimSmoothTween = TweenService:Create(camera, tweenInfo, {CFrame = targetCFrame})
    aimSmoothTween:Play()
    
    lastCameraCFrame = targetCFrame
end

----------------------------------------------------------------
-- IMPROVED WALL CHECK FUNCTIONS (UPDATED)
----------------------------------------------------------------
local function isVisible(targetPart)
    if not wallCheckEnabled then
        return true
    end
    
    -- Get camera position
    local cameraPos = camera.CFrame.Position
    
    -- Get target position
    local targetPos = targetPart.Position
    
    -- Create a ray from camera to target
    local direction = (targetPos - cameraPos).Unit
    local distance = (targetPos - cameraPos).Magnitude
    
    -- Create raycast parameters
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    -- Create filter list (ignore players, camera, and the target itself)
    local filterList = {player.Character, camera}
    
    -- Add all players to filter list
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character then
            table.insert(filterList, plr.Character)
        end
    end
    
    -- Add the target's parent to filter list to avoid hitting the target itself
    if targetPart.Parent then
        table.insert(filterList, targetPart.Parent)
    end
    
    raycastParams.FilterDescendantsInstances = filterList
    raycastParams.IgnoreWater = true
    
    -- Cast the ray
    local result = workspace:Raycast(cameraPos, direction * distance, raycastParams)
    
    -- If we hit nothing, the target is visible
    if not result then
        return true
    end
    
    -- Check if we hit a transparent part (like glass)
    if result.Instance and result.Instance.Transparency > 0.8 then
        -- Cast another ray from the hit position to the target
        local newRaycastParams = RaycastParams.new()
        newRaycastParams.FilterType = Enum.RaycastFilterType.Blacklist
        newRaycastParams.FilterDescendantsInstances = filterList
        newRaycastParams.IgnoreWater = true
        
        local newResult = workspace:Raycast(result.Position + (direction * 0.1), direction * (distance - (result.Position - cameraPos).Magnitude), newRaycastParams)
        
        if not newResult then
            return true
        end
    end
    
    -- If we hit something solid, the target is not visible
    return false
end

----------------------------------------------------------------
-- AIMBOT + WALL CHECK FUNCTIONS (UPDATED WITH VERSION LOGIC)
----------------------------------------------------------------
local function getClosestZombieInFOV()
    local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    local closestDist = aimFOV
    local closestZombie = nil

    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        -- Determine which part to aim at based on version
        local targetPartName = aimPartName
        
        if zombie:IsA("Model") and zombie:FindFirstChild(targetPartName) then
            -- Version-specific filtering
            if currentVersion == "OnlySniper" and not isSniperZombie(zombie) then
                continue
            elseif currentVersion == "IgnoreWraith" and (isWraithZombie(zombie) or isDrenchZombie(zombie)) then
                continue
            elseif currentVersion == "SmartSpecialKilling" and isBossZombie(zombie) and shouldIgnoreBoss(zombie) then
                continue
            elseif currentVersion == "DestroyersOnly" and not isDestroyerZombie(zombie) then
                continue
            end
            
            local part = zombie[targetPartName]
            local screenPos, onScreen = camera:WorldToScreenPoint(part.Position)
            
            if onScreen then
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                
                -- Only check visibility if within FOV
                if dist < closestDist then
                    local visible = true
                    if wallCheckEnabled then
                        visible = isVisible(part)
                    end
                    
                    if visible then
                        closestDist = dist
                        closestZombie = zombie
                    end
                end
            end
        end
    end

    -- Second pass for Smart Special Killing: Check for GuardianZombies near Hunter zombies
    if currentVersion == "SmartSpecialKilling" and closestZombie and isHunterZombie(closestZombie) then
        local closestZombiePos = closestZombie:FindFirstChild(aimPartName).Position
        local guardianZombie = nil
        local guardianDistance = math.huge
        
        for _, zombie in ipairs(zombiesFolder:GetChildren()) do
            if zombie:IsA("Model") and isGuardianZombie(zombie) and zombie:FindFirstChild(aimPartName) then
                local part = zombie[aimPartName]
                local screenPos, onScreen = camera:WorldToScreenPoint(part.Position)
                
                if onScreen then
                    local dist = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude
                    local worldDistance = (part.Position - closestZombiePos).Magnitude
                    
                    -- Check if this GuardianZombie is within 20 studs of the Hunter
                    if worldDistance <= GUARDIAN_PRIORITY_RANGE and dist <= aimFOV then
                        local visible = true
                        if wallCheckEnabled then
                            visible = isVisible(part)
                        end
                        
                        if visible and worldDistance < guardianDistance then
                            guardianDistance = worldDistance
                            guardianZombie = zombie
                        end
                    end
                end
            end
        end
        
        -- If we found a GuardianZombie near the Hunter, prioritize it
        if guardianZombie then
            return guardianZombie
        end
    end

    return closestZombie
end

----------------------------------------------------------------
-- HITBOX EXPANDER FUNCTIONS (UPDATED FOR PRINTING MODE)
----------------------------------------------------------------
local function expandHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if not head:FindFirstChild("OriginalSize") then
                local originalSize = Instance.new("Vector3Value")
                originalSize.Name = "OriginalSize"
                originalSize.Value = head.Size
                originalSize.Parent = head
            end
            
            -- Make hitbox 4x4x4 for sniper zombies
            if isSniperZombie(zombie) then
                head.Size = Vector3.new(4, 4, 4) -- 4x4x4 hitbox for sniper zombies
            else
                head.Size = Vector3.new(5, 5, 5) -- Normal hitbox for other zombies
            end
            
            head.Transparency = 0.5
            head.CanCollide = false
            head.Material = Enum.Material.ForceField
        end
    end
end

local function expandTorsoHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("HumanoidRootPart") then
        local torso = zombie.HumanoidRootPart
        if torso:IsA("BasePart") then
            if not torso:FindFirstChild("OriginalSize") then
                local originalSize = Instance.new("Vector3Value")
                originalSize.Name = "OriginalSize"
                originalSize.Value = torso.Size
                originalSize.Parent = torso
            end
            
            -- Make hitbox 4x4x4 for sniper zombies
            if isSniperZombie(zombie) then
                torso.Size = Vector3.new(4, 4, 4) -- 4x4x4 hitbox for sniper zombies
            else
                torso.Size = Vector3.new(5, 5, 5) -- Normal hitbox for other zombies
            end
            
            torso.Transparency = 0.5
            torso.CanCollide = false
            torso.Material = Enum.Material.ForceField
        end
    end
end

local function resetHeadHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("Head") then
        local head = zombie.Head
        if head:IsA("BasePart") then
            if head:FindFirstChild("OriginalSize") then
                head.Size = head.OriginalSize.Value
                head.Transparency = 0
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
                head.OriginalSize:Destroy()
            else
                head.Size = Vector3.new(1, 1, 1)
                head.Transparency = 0
                head.CanCollide = true
                head.Material = Enum.Material.Plastic
            end
        end
    end
end

local function resetTorsoHitbox(zombie)
    if zombie:IsA("Model") and zombie:FindFirstChild("HumanoidRootPart") then
        local torso = zombie.HumanoidRootPart
        if torso:IsA("BasePart") then
            if torso:FindFirstChild("OriginalSize") then
                torso.Size = torso.OriginalSize.Value
                torso.Transparency = 0
                torso.CanCollide = true
                torso.Material = Enum.Material.Plastic
                torso.OriginalSize:Destroy()
            else
                torso.Size = Vector3.new(2, 2, 1)
                torso.Transparency = 0
                torso.CanCollide = true
                torso.Material = Enum.Material.Plastic
            end
        end
    end
end

local function updateAllZombies()
    for _, zombie in ipairs(zombiesFolder:GetChildren()) do
        if hitboxEnabled then
            -- Reset both hitboxes first
            resetHeadHitbox(zombie)
            resetTorsoHitbox(zombie)
            
            -- Then expand the appropriate one based on version
            if currentVersion == "PrintingMode" then
                expandTorsoHitbox(zombie)
            else
                expandHeadHitbox(zombie)
            end
        else
            -- Reset both hitboxes if hitbox is disabled
            resetHeadHitbox(zombie)
            resetTorsoHitbox(zombie)
        end
    end
end

-- Hitbox Toggle Handler
hitboxToggle.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    hitboxToggle.Text = hitboxEnabled and "ON" or "OFF"
    hitboxToggle.BackgroundColor3 = hitboxEnabled and colors.toggleOn or colors.toggleOff
    updateAllZombies()
end)

zombiesFolder.ChildAdded:Connect(function(zombie)
    task.wait(0.2)
    if hitboxEnabled then
        -- Reset both hitboxes first
        resetHeadHitbox(zombie)
        resetTorsoHitbox(zombie)
        
        -- Then expand the appropriate one based on version
        if currentVersion == "PrintingMode" then
            expandTorsoHitbox(zombie)
        else
            expandHeadHitbox(zombie)
        end
    end
end)

----------------------------------------------------------------
-- MAIN LOOP (UPDATED WITH SNIPER AIM OFFSET)
----------------------------------------------------------------
RunService.RenderStepped:Connect(function()
    if draggingSlider then
        local mouseX = UserInputService:GetMouseLocation().X
        local sliderX = sliderTrack.AbsolutePosition.X
        local sliderWidth = sliderTrack.AbsoluteSize.X
        local relativeX = math.clamp(mouseX - sliderX, 0, sliderWidth)
        
        aimFOV = math.floor(20 + (relativeX/sliderWidth) * 280)
        updateFOVSlider()
    end

    fovCircle.Position = camera.ViewportSize / 2
    fovCircle.Radius = aimFOV
    fovCircle.Visible = fovVisible

    -- Clean up boss timers
    if currentVersion == "SmartSpecialKilling" then
        cleanupBossTimers()
    end

    if aimLockActive then
        local closestZombie = getClosestZombieInFOV()
        if closestZombie then
            local targetPart = closestZombie[aimPartName]
            local targetPosition = targetPart.Position
            
            -- Aim slightly higher for sniper zombies
            if isSniperZombie(closestZombie) then
                targetPosition = targetPosition + Vector3.new(0, 0.25, 0) -- Aim higher for sniper zombies
            end
            
            smoothAim(targetPosition)
        end
    end
end)

-- Keybind for PC users
if isPC then
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == aimbindKey then
            aimLockActive = not aimLockActive
            aimlockToggle.Text = aimLockActive and "ON" or "OFF"
            aimlockToggle.BackgroundColor3 = aimLockActive and colors.toggleOn or colors.toggleOff
        end
    end)
end

-- Initialize hitboxes
updateAllZombies()
